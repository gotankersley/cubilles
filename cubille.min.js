"use strict";function MenuProperties(){this.showCublets=!1,this.showFlat=!0,this.showGrid=!0,this.showLabels=!1}function MenuManager(){this.properties=new MenuProperties,this.rootMenu=new dat.GUI,this.rootMenu.add(this.properties,"showCublets").onChange(this.onChangeShowCublets),this.rootMenu.add(this.properties,"showFlat").onChange(this.onChangeShowFlat),this.rootMenu.add(this.properties,"showGrid").onChange(this.onChangeShowGrid),this.rootMenu.add(this.properties,"showLabels")}function init(){var a=new MenuManager;menu=a.properties,scene=new THREE.Scene;var b=window.innerWidth,c=window.innerHeight,d=45,e=b/c,f=.1,g=200;camera=new THREE.PerspectiveCamera(d,e,f,g),scene.add(camera),camera.position.set(CUBES_CENTER,0,32),renderer=new THREE.WebGLRenderer({antialias:!0}),renderer.setSize(b,c),container=document.createElement("container"),document.body.appendChild(container),container.appendChild(renderer.domElement),controls=new THREE.OrbitControls(camera,renderer.domElement),controls.center=new THREE.Vector3(CUBES_CENTER,0,4),flatCanvas=document.getElementById("flat"),flatBounds=flatCanvas.getBoundingClientRect(),flatCtx=flatCanvas.getContext("2d"),flatCanvas.width=FLAT_SIZE,flatCanvas.height=FLAT_SIZE,window.addEventListener("resize",onWindowResize,!1),window.addEventListener("keydown",onKeyDown,!1),window.addEventListener("mousemove",onMouseMove),window.addEventListener("mousedown",onMouseClick),flatCanvas.addEventListener("mousemove",onFlatMouseMove),flatCanvas.addEventListener("mousedown",onFlatMouseClick),flatCtx.font="bold 10pt Arial";var h=new THREE.PointLight(16777215);h.position.set(0,10,0),scene.add(h);var i=new THREE.HemisphereLight(16777215,16777215,.3);i.position.set(0,10,0),scene.add(i);for(var j=0;j<DIMENSIONS;j++){var k=10*j;addCube(j,k),addGrid(j,k)}var l=new THREE.Points(dotGeometry,dotMaterial);scene.add(l),render()}function onWindowResize(){camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)}function onKeyDown(a){if(a.ctrlKey){var b;if(a.keyCode==KEY_Z&&moves.length){b=moves.pop(),undos.push(b),turnClicks=b.tc;var c=dots[b.x][b.y][b.z][b.w];c.player=EMPTY,c.material=playerMats[EMPTY]}else if(a.keyCode==KEY_Y&&undos.length){var b=undos.pop();moves.push(b),turnClicks=b.tc;var d=Math.floor(turnClicks/2)%2,c=dots[b.x][b.y][b.z][b.w];c.player=d,c.material=playerMats[d]}}}function onMouseMove(a){flatHover=!1,mouse.x=a.clientX/window.innerWidth*2-1,mouse.y=2*-(a.clientY/window.innerHeight)+1}function onFlatMouseMove(a){flatHover=!0;var b=Math.min(3,Math.max(0,Math.floor(a.clientY/92.5))),c=Math.min(3,Math.max(0,Math.floor(a.clientX/92.5))),d=90*c+FLAT_MARGIN+5,e=90*b+FLAT_MARGIN+5,f=Math.min(3,Math.max(0,Math.floor((a.clientX-d)/FLAT_UNIT))),g=Math.min(3,Math.max(0,Math.floor((a.clientY-e)/FLAT_UNIT)));flatMouse={x:f,y:g,z:b,w:c},a.stopPropagation()}function onFlatMouseClick(a){var b=Math.floor(a.clientY/92.5),c=Math.floor(a.clientX/92.5),d=90*c+FLAT_MARGIN+5,e=90*b+FLAT_MARGIN+5,f=Math.floor((a.clientX-d)/FLAT_UNIT),g=Math.floor((a.clientY-e)/FLAT_UNIT),h=dots[f][b][g][c];if(h.player==EMPTY){var i=Math.floor(turnClicks/2)%2;h.player=i,h.material=playerMats[i],moves.push({x:f,y:b,z:g,w:c,tc:turnClicks}),turnClicks++}a.stopPropagation()}function onMouseClick(a){mouse.x=a.clientX/window.innerWidth*2-1,mouse.y=2*-(a.clientY/window.innerHeight)+1;var b=raycaster.intersectObjects(sceneDots);if(b.length){var c=b[0].object;if(c.player==EMPTY){var d=Math.floor(turnClicks/2)%2;c.player=d,c.material=playerMats[d];var e=c.ind;moves.push({x:e.x,y:e.y,z:e.z,w:e.w,tc:turnClicks}),turnClicks++}}}function initArray(a){for(var b=[],c=0;c<DIMENSIONS;c++){for(var d=[],e=0;e<DIMENSIONS;e++){for(var f=[],g=0;g<DIMENSIONS;g++){for(var h=[],i=0;i<DIMENSIONS;i++)h.push(a);f.push(h)}d.push(f)}b.push(d)}return b}function addDot(a,b,c,d,e,f,g,h,i){var j=new THREE.CubeGeometry(DOT_SIZE,DOT_SIZE,DOT_SIZE),k=new THREE.Mesh(j,playerMats[i]);k.position.set(e,f,g),scene.add(k),k.ind={x:a,y:b,z:c,w:d},k.player=i,dots[a][b][c][d]=k,sceneDots.push(k),dotGeometry.vertices.push(new THREE.Vector3(e,f,g))}function addCube(a,b){for(var c=0;c<DIMENSIONS;c++)for(var d=2*c+b,e=0;e<DIMENSIONS;e++)for(var f=2*-e,g=0;g<DIMENSIONS;g++){var h=2*g;addDot(c,e,g,a,d,f,h,b,EMPTY)}}function addGrid(a,b){for(var c=new THREE.Geometry,d=1,e=0;e<5;e++){var f=CUBLET_SIZE*e+b-d,g=-8+d,h=CUBLET_SIZE*e-d;c.vertices.push(new THREE.Vector3(f,g,-d),new THREE.Vector3(f,g,CUBE_SIZE-d),new THREE.Vector3(-d,g,h),new THREE.Vector3(CUBE_SIZE+b-d,g,h))}var i=new THREE.LineSegments(c,lineMat);i.visible=MenuProperties.showGrid,scene.add(i),gridObjs.push(i)}function render(a){if(flatHover){var b=dots[flatMouse.x][flatMouse.z][flatMouse.y][flatMouse.w];b.player==EMPTY&&(lastHover&&(lastHover.material=playerMats[lastHover.player]),lastHover=b,b.material=playerMats[HOVER])}else{raycaster.setFromCamera(mouse,camera);var c=raycaster.intersectObjects(sceneDots);if(c.length){var b=c[0].object;if(b.player==EMPTY&&(lastHover&&(lastHover.material=playerMats[lastHover.player]),lastHover=b,b.material=playerMats[HOVER],!flatHover)){var d=b.ind;flatMouse={x:d.x,y:d.z,z:d.y,w:d.w}}}}requestAnimationFrame(render),controls.update(),renderer.render(scene,camera),renderFlat()}function renderFlat(){flatCtx.fillStyle=COLOR_BACKGROUND,flatCtx.fillRect(0,0,FLAT_SIZE,FLAT_SIZE);for(var a=0;a<DIMENSIONS;a++)for(var b=90*a+FLAT_MARGIN,c=0;c<DIMENSIONS;c++){for(var d=90*c+FLAT_MARGIN,e=0;e<DIMENSIONS;e++)for(var f=b+FLAT_UNIT*e,g=0;g<DIMENSIONS;g++){var h=d+FLAT_UNIT*g,i=dots[g][a][e][c].player;i!=EMPTY?(flatCtx.fillStyle=i==PLAYER1?COLOR_PLAYER1:COLOR_PLAYER2,flatCtx.fillRect(h,f,FLAT_UNIT,FLAT_UNIT)):g==flatMouse.x&&e==flatMouse.y&&a==flatMouse.z&&c==flatMouse.w&&(flatCtx.fillStyle=COLOR_HOVER,flatCtx.fillRect(h,f,FLAT_UNIT,FLAT_UNIT))}drawGrid2D(d,b)}menu.showLabels&&drawLabels2D()}function drawGrid2D(a,b){flatCtx.strokeStyle=COLOR_GRID;for(var c=0;c<5;c++){var d=c*FLAT_UNIT+a,e=c*FLAT_UNIT+b;drawLine(d,b,d,FLAT_GRID+b),drawLine(a,e,FLAT_GRID+a,e)}}function drawLabels2D(){flatCtx.fillStyle=COLOR_GRID;for(var a=0;a<DIMENSIONS;a++)flatCtx.fillText("W",90*a+45,10),flatCtx.fillText("Z",0,90*a+55)}function drawLine(a,b,c,d){flatCtx.beginPath(),flatCtx.moveTo(a,b),flatCtx.lineTo(c,d),flatCtx.closePath(),flatCtx.stroke()}MenuManager.prototype.onChangeShowCublets=function(a){playerMats[EMPTY].opacity=a?.3:0},MenuManager.prototype.onChangeShowFlat=function(a){flatCanvas.style.display=a?"block":"none"},MenuManager.prototype.onChangeShowGrid=function(a){for(var b=0;b<gridObjs.length;b++){var c=gridObjs[b];c.visible=a}};const DOT_SIZE=1,DOT_MARGIN=1,W_MARGIN=2,DIMENSIONS=4,CUBLET_SIZE=2,CUBE_SIZE=8,CUBES_CENTER=20,PLAYER1=0,PLAYER2=1,EMPTY=2,HOVER=3,COLOR_BACKGROUND="#fff",COLOR_GRID="#000",COLOR_PLAYER1="#F00",COLOR_PLAYER2="#00F",COLOR_HOVER="#0ff",KEY_Z=90,KEY_Y=89,FLAT_SIZE=370,FLAT_UNIT=20,FLAT_GRID=80,FLAT_MARGIN=10,FLAT_PADDING=10;var container,scene,camera,renderer,controls,origin,flatCanvas,flatBounds,flatCtx,flatMouse={x:0,y:0,z:0,w:0},lastHover=null,gridObjs=[],undos=[],moves=[],labels,menu,lineMat=new THREE.LineBasicMaterial({color:16711680}),playerMats=[new THREE.MeshLambertMaterial({color:16711680,side:THREE.DoubleSide}),new THREE.MeshLambertMaterial({color:255,side:THREE.DoubleSide}),new THREE.MeshBasicMaterial({color:65535,transparent:!0,opacity:0,side:THREE.FrontSide}),new THREE.MeshBasicMaterial({color:3368703,transparent:!0,opacity:.3,side:THREE.FrontSide})],dotMaterial=new THREE.PointsMaterial({size:10,sizeAttenuation:!1}),dotGeometry=new THREE.Geometry,dots=initArray(null),sceneDots=[],raycaster=new THREE.Raycaster,mouse=new THREE.Vector2,turnClicks=0;init();var flatHover=!1;